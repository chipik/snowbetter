upstream backend_upstream {
  server backend:8000;
}

upstream frontend_upstream {
  server frontend:80;
}

# Редирект на https
server {
  listen 80;
  server_name ${DOMAIN} www.${DOMAIN};
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }
  location / { return 301 https://$host$request_uri; }
}

# Основной https-виртхост
server {
  listen 443 ssl http2;
  server_name snowbetter.ru www.snowbetter.ru;  # ✅ Жестко заданный домен

  ssl_certificate     /etc/letsencrypt/live/snowbetter.ru/fullchain.pem;  # ✅ Жестко заданный путь
  ssl_certificate_key /etc/letsencrypt/live/snowbetter.ru/privkey.pem;    # ✅ Жестко заданный путь

  # базовые SSL-настройки
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;

  # HSTS по желанию (после проверки): add_header Strict-Transport-Security "max-age=31536000" always;

  # webroot чтобы продлевать без переключений
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # API → backend
  location /api/ {
    proxy_pass http://backend_upstream;
  }

  # Uploads (статические файлы)
  location /uploads/ {
    alias /var/www/uploads/;
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary Accept-Encoding;
    
    # Разрешить CORS для изображений
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
  }

  # Frontend (SPA)
  location / {
    proxy_pass http://frontend_upstream;
    
    # Fallback для SPA маршрутизации
    proxy_intercept_errors on;
    error_page 404 = @fallback;
  }

  # Fallback для SPA - все 404 возвращают index.html
  location @fallback {
    proxy_pass http://frontend_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
