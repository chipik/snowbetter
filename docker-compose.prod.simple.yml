version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ushe_luche_postgres_prod
    environment:
      POSTGRES_DB: ushe_luche_prod
      POSTGRES_USER: ushe_luche_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password_here}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ushe_luche_user -d ushe_luche_prod"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ushe_luche_backend_prod
    environment:
      - DATABASE_URL=postgresql://ushe_luche_user:${POSTGRES_PASSWORD:-your_secure_password_here}@postgres:5432/ushe_luche_prod
      - SECRET_KEY=${SECRET_KEY:-your_super_secret_key_here_change_in_production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost}
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod.simple
    container_name: ushe_luche_frontend_prod
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - REACT_APP_ENVIRONMENT=production
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Simple Nginx for HTTP only
  nginx:
    image: nginx:alpine
    container_name: ushe_luche_nginx_prod
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.simple.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./uploads:/var/www/uploads:ro
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
